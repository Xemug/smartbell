{"ast":null,"code":"var _jsxFileName = \"/Users/juan/Documents/Inversiones/AI training/templates-main/Cursor MCP/dairy-milk-tracker/frontend/src/pages/DashboardNew.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { useAuth } from '../contexts/AuthContext';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nconst DashboardNew = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [selectedHerd, setSelectedHerd] = useState('');\n  const [herds, setHerds] = useState([]);\n  const [milkProductions, setMilkProductions] = useState([]);\n  const [stats, setStats] = useState({\n    totalLiters: 0,\n    averagePerDay: 0,\n    daysRecorded: 0,\n    litersPerCow: 0\n  });\n  const [timeSpan, setTimeSpan] = useState('week');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [newProduction, setNewProduction] = useState('');\n  useEffect(() => {\n    fetchInitialData();\n  }, []);\n  useEffect(() => {\n    if (selectedHerd) {\n      fetchStats();\n      fetchMilkProductions();\n    }\n  }, [selectedHerd, timeSpan]);\n  const fetchInitialData = async () => {\n    try {\n      setLoading(true);\n\n      // Fetch herds\n      const herdsResponse = await axios.get('/api/herds/');\n      setHerds(herdsResponse.data);\n      if (herdsResponse.data.length > 0) {\n        setSelectedHerd(herdsResponse.data[0].id.toString());\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to load data');\n      setLoading(false);\n    }\n  };\n  const fetchStats = async () => {\n    try {\n      const statsResponse = await axios.get(`/api/milk-production/stats?herd_id=${selectedHerd}&time_span=${timeSpan}`);\n      setStats({\n        totalLiters: statsResponse.data.total_liters,\n        averagePerDay: statsResponse.data.average_per_day,\n        daysRecorded: statsResponse.data.days_recorded,\n        litersPerCow: statsResponse.data.liters_per_cow\n      });\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n      setError('Failed to load statistics');\n    }\n  };\n  const fetchMilkProductions = async () => {\n    try {\n      const milkResponse = await axios.get(`/api/milk-production/?herd_id=${selectedHerd}`);\n      setMilkProductions(milkResponse.data);\n    } catch (error) {\n      console.error('Error fetching milk production data:', error);\n      setError('Failed to load milk production data');\n    }\n  };\n  const handleSubmitProduction = async e => {\n    e.preventDefault();\n\n    // Validate input\n    if (!newProduction || newProduction.trim() === '') {\n      setError('Please enter a milk production amount');\n      return;\n    }\n    const productionValue = parseFloat(newProduction);\n    if (isNaN(productionValue)) {\n      setError('Please enter a valid number');\n      return;\n    }\n    if (productionValue <= 0) {\n      setError('Production amount must be greater than zero');\n      return;\n    }\n    if (productionValue > 100000) {\n      setError('Production amount seems too high. Please check your input');\n      return;\n    }\n    try {\n      setError('');\n      const payload = {\n        herd_id: parseInt(selectedHerd),\n        date: new Date().toISOString(),\n        amount_liters: parseFloat(newProduction)\n      };\n      await axios.post('/api/milk-production/', payload);\n\n      // Refresh data\n      fetchStats();\n      fetchMilkProductions();\n      setNewProduction('');\n    } catch (error) {\n      console.error('Error adding milk production:', error);\n      let errorMessage = 'Failed to add milk production';\n      if (error.response) {\n        var _error$response$data;\n        errorMessage = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || `Server error (${error.response.status}): Unable to add milk production record`;\n      } else if (error.request) {\n        errorMessage = 'No response from server. Please check your connection.';\n      }\n      setError(errorMessage);\n    }\n  };\n  const handleHerdChange = e => {\n    setSelectedHerd(e.target.value);\n  };\n  const handleTimeSpanChange = e => {\n    setTimeSpan(e.target.value);\n  };\n\n  // Prepare chart data\n  const prepareChartData = () => {\n    if (milkProductions.length === 0) return null;\n\n    // Sort by date\n    const sortedProductions = [...milkProductions].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n    // Get the last 7 or relevant number of entries\n    let filteredProductions = sortedProductions;\n    if (timeSpan === 'week') {\n      filteredProductions = sortedProductions.slice(-7);\n    } else if (timeSpan === 'month') {\n      filteredProductions = sortedProductions.slice(-30);\n    }\n\n    // Use Spanish day abbreviations\n    const dayLabels = ['Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab', 'Dom'];\n\n    // Extract dates and amounts\n    const labels = filteredProductions.map(item => {\n      const date = new Date(item.date);\n      return dayLabels[date.getDay() === 0 ? 6 : date.getDay() - 1];\n    });\n    const data = filteredProductions.map(item => item.amount_liters);\n    return {\n      labels,\n      datasets: [{\n        type: 'bar',\n        label: 'Milk Production (Liters)',\n        data,\n        backgroundColor: 'rgba(184, 196, 211, 0.7)',\n        barThickness: 20\n      }, {\n        type: 'line',\n        label: 'Trend',\n        data,\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.3)',\n        fill: true,\n        tension: 0.4\n      }]\n    };\n  };\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n          borderDash: [5, 5]\n        },\n        ticks: {\n          font: {\n            size: 12\n          }\n        }\n      },\n      x: {\n        grid: {\n          display: false\n        },\n        ticks: {\n          font: {\n            size: 12\n          }\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: false\n      }\n    }\n  };\n  const chartData = prepareChartData();\n  const selectedHerdData = herds.find(h => h.id.toString() === selectedHerd);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"milk-log-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  }\n  if (herds.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"milk-log-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You don't have any herds yet. Create your first herd to start tracking milk production.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/herds/add\",\n          className: \"btn-primary\",\n          children: \"Add New Herd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"milk-log-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-icon\",\n        children: \"\\uD83D\\uDD14\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"herd-selector\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedHerd,\n          onChange: handleHerdChange,\n          children: herds.map(herd => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: herd.id,\n            children: herd.name\n          }, herd.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-icon\",\n        children: \"\\uD83D\\uDC64\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: \"\\uD83D\\uDCC8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Milk production\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"production-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-span-filter\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: timeSpan,\n          onChange: handleTimeSpanChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"week\",\n            children: \"Last 7 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"month\",\n            children: \"Last 30 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year\",\n            children: \"Last 365 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: chartData ? /*#__PURE__*/_jsxDEV(Bar, {\n          options: chartOptions,\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-chart\",\n          children: \"No data available for the selected time period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: \"\\uD83E\\uDD5B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Milk production\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-value\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"number\",\n          children: stats.litersPerCow.toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"unit\",\n          children: \"lt/day per cow in average\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-production\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Log your today's herd milk production\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitProduction,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.1\",\n          placeholder: \"1,000 liters produced today\",\n          value: newProduction,\n          onChange: e => setNewProduction(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn-primary\",\n          children: \"Log my today's production\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        className: \"tab active\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Milk Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/herds\",\n        className: \"tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: \"\\uD83D\\uDC04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"My Ranch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profile\",\n        className: \"tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: \"\\uD83D\\uDC64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardNew, \"z/CWupt4s8/7NnI1AfjtG8X1nmA=\", false, function () {\n  return [useAuth];\n});\n_c = DashboardNew;\nexport default DashboardNew;\nvar _c;\n$RefreshReg$(_c, \"DashboardNew\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","Line","Bar","useAuth","jsxDEV","_jsxDEV","register","DashboardNew","_s","currentUser","selectedHerd","setSelectedHerd","herds","setHerds","milkProductions","setMilkProductions","stats","setStats","totalLiters","averagePerDay","daysRecorded","litersPerCow","timeSpan","setTimeSpan","loading","setLoading","error","setError","newProduction","setNewProduction","fetchInitialData","fetchStats","fetchMilkProductions","herdsResponse","get","data","length","id","toString","console","statsResponse","total_liters","average_per_day","days_recorded","liters_per_cow","milkResponse","handleSubmitProduction","e","preventDefault","trim","productionValue","parseFloat","isNaN","payload","herd_id","parseInt","date","Date","toISOString","amount_liters","post","errorMessage","response","_error$response$data","detail","status","request","handleHerdChange","target","value","handleTimeSpanChange","prepareChartData","sortedProductions","sort","a","b","filteredProductions","slice","dayLabels","labels","map","item","getDay","datasets","type","label","backgroundColor","barThickness","borderColor","fill","tension","chartOptions","responsive","scales","y","beginAtZero","grid","color","borderDash","ticks","font","size","x","display","plugins","legend","title","chartData","selectedHerdData","find","h","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onChange","herd","name","options","toFixed","onSubmit","step","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/juan/Documents/Inversiones/AI training/templates-main/Cursor MCP/dairy-milk-tracker/frontend/src/pages/DashboardNew.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { useAuth } from '../contexts/AuthContext';\n\n// Register ChartJS components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\n\nconst DashboardNew = () => {\n  const { currentUser } = useAuth();\n  const [selectedHerd, setSelectedHerd] = useState('');\n  const [herds, setHerds] = useState([]);\n  const [milkProductions, setMilkProductions] = useState([]);\n  const [stats, setStats] = useState({\n    totalLiters: 0,\n    averagePerDay: 0,\n    daysRecorded: 0,\n    litersPerCow: 0\n  });\n  const [timeSpan, setTimeSpan] = useState('week');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [newProduction, setNewProduction] = useState('');\n\n  useEffect(() => {\n    fetchInitialData();\n  }, []);\n\n  useEffect(() => {\n    if (selectedHerd) {\n      fetchStats();\n      fetchMilkProductions();\n    }\n  }, [selectedHerd, timeSpan]);\n\n  const fetchInitialData = async () => {\n    try {\n      setLoading(true);\n      \n      // Fetch herds\n      const herdsResponse = await axios.get('/api/herds/');\n      setHerds(herdsResponse.data);\n      \n      if (herdsResponse.data.length > 0) {\n        setSelectedHerd(herdsResponse.data[0].id.toString());\n      }\n      \n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to load data');\n      setLoading(false);\n    }\n  };\n\n  const fetchStats = async () => {\n    try {\n      const statsResponse = await axios.get(`/api/milk-production/stats?herd_id=${selectedHerd}&time_span=${timeSpan}`);\n      setStats({\n        totalLiters: statsResponse.data.total_liters,\n        averagePerDay: statsResponse.data.average_per_day,\n        daysRecorded: statsResponse.data.days_recorded,\n        litersPerCow: statsResponse.data.liters_per_cow\n      });\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n      setError('Failed to load statistics');\n    }\n  };\n\n  const fetchMilkProductions = async () => {\n    try {\n      const milkResponse = await axios.get(`/api/milk-production/?herd_id=${selectedHerd}`);\n      setMilkProductions(milkResponse.data);\n    } catch (error) {\n      console.error('Error fetching milk production data:', error);\n      setError('Failed to load milk production data');\n    }\n  };\n\n  const handleSubmitProduction = async (e) => {\n    e.preventDefault();\n    \n    // Validate input\n    if (!newProduction || newProduction.trim() === '') {\n      setError('Please enter a milk production amount');\n      return;\n    }\n    \n    const productionValue = parseFloat(newProduction);\n    \n    if (isNaN(productionValue)) {\n      setError('Please enter a valid number');\n      return;\n    }\n    \n    if (productionValue <= 0) {\n      setError('Production amount must be greater than zero');\n      return;\n    }\n    \n    if (productionValue > 100000) {\n      setError('Production amount seems too high. Please check your input');\n      return;\n    }\n    \n    try {\n      setError('');\n      const payload = {\n        herd_id: parseInt(selectedHerd),\n        date: new Date().toISOString(),\n        amount_liters: parseFloat(newProduction),\n      };\n      \n      await axios.post('/api/milk-production/', payload);\n      \n      // Refresh data\n      fetchStats();\n      fetchMilkProductions();\n      setNewProduction('');\n    } catch (error) {\n      console.error('Error adding milk production:', error);\n      let errorMessage = 'Failed to add milk production';\n      \n      if (error.response) {\n        errorMessage = error.response.data?.detail || \n          `Server error (${error.response.status}): Unable to add milk production record`;\n      } else if (error.request) {\n        errorMessage = 'No response from server. Please check your connection.';\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  const handleHerdChange = (e) => {\n    setSelectedHerd(e.target.value);\n  };\n\n  const handleTimeSpanChange = (e) => {\n    setTimeSpan(e.target.value);\n  };\n\n  // Prepare chart data\n  const prepareChartData = () => {\n    if (milkProductions.length === 0) return null;\n    \n    // Sort by date\n    const sortedProductions = [...milkProductions].sort((a, b) => \n      new Date(a.date) - new Date(b.date)\n    );\n    \n    // Get the last 7 or relevant number of entries\n    let filteredProductions = sortedProductions;\n    if (timeSpan === 'week') {\n      filteredProductions = sortedProductions.slice(-7);\n    } else if (timeSpan === 'month') {\n      filteredProductions = sortedProductions.slice(-30);\n    }\n    \n    // Use Spanish day abbreviations\n    const dayLabels = ['Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab', 'Dom'];\n    \n    // Extract dates and amounts\n    const labels = filteredProductions.map(item => {\n      const date = new Date(item.date);\n      return dayLabels[date.getDay() === 0 ? 6 : date.getDay() - 1];\n    });\n    \n    const data = filteredProductions.map(item => item.amount_liters);\n    \n    return {\n      labels,\n      datasets: [\n        {\n          type: 'bar',\n          label: 'Milk Production (Liters)',\n          data,\n          backgroundColor: 'rgba(184, 196, 211, 0.7)',\n          barThickness: 20,\n        },\n        {\n          type: 'line',\n          label: 'Trend',\n          data,\n          borderColor: 'rgb(75, 192, 192)',\n          backgroundColor: 'rgba(75, 192, 192, 0.3)',\n          fill: true,\n          tension: 0.4,\n        }\n      ]\n    };\n  };\n\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n          borderDash: [5, 5],\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        }\n      },\n      x: {\n        grid: {\n          display: false,\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n      },\n    },\n  };\n\n  const chartData = prepareChartData();\n  const selectedHerdData = herds.find(h => h.id.toString() === selectedHerd);\n\n  if (loading) {\n    return (\n      <div className=\"milk-log-container\">\n        <div className=\"loading\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (herds.length === 0) {\n    return (\n      <div className=\"milk-log-container\">\n        <div className=\"empty-state\">\n          <p>You don't have any herds yet. Create your first herd to start tracking milk production.</p>\n          <Link to=\"/herds/add\" className=\"btn-primary\">Add New Herd</Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"milk-log-container\">\n      <div className=\"header-controls\">\n        <div className=\"notification-icon\">🔔</div>\n        <div className=\"herd-selector\">\n          <select value={selectedHerd} onChange={handleHerdChange}>\n            {herds.map(herd => (\n              <option key={herd.id} value={herd.id}>{herd.name}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"profile-icon\">👤</div>\n      </div>\n      \n      <div className=\"section-header\">\n        <div className=\"icon\">📈</div>\n        <span>Milk production</span>\n      </div>\n      \n      <div className=\"production-history\">\n        <div className=\"time-span-filter\">\n          <select value={timeSpan} onChange={handleTimeSpanChange}>\n            <option value=\"week\">Last 7 days</option>\n            <option value=\"month\">Last 30 days</option>\n            <option value=\"year\">Last 365 days</option>\n          </select>\n        </div>\n        \n        <div className=\"chart-container\">\n          {chartData ? (\n            <Bar options={chartOptions} data={chartData} />\n          ) : (\n            <div className=\"empty-chart\">No data available for the selected time period</div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"stats-card\">\n        <div className=\"icon-container\">\n          <div className=\"icon\">🥛</div>\n          <span>Milk production</span>\n        </div>\n        <div className=\"stat-value\">\n          <span className=\"number\">{stats.litersPerCow.toFixed(1)}</span>\n          <span className=\"unit\">lt/day per cow in average</span>\n        </div>\n      </div>\n      \n      <div className=\"add-production\">\n        <h3>Log your today's herd milk production</h3>\n        <form onSubmit={handleSubmitProduction}>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            placeholder=\"1,000 liters produced today\"\n            value={newProduction}\n            onChange={(e) => setNewProduction(e.target.value)}\n            required\n          />\n          <button type=\"submit\" className=\"btn-primary\">Log my today's production</button>\n        </form>\n        {error && <div className=\"error-message\">{error}</div>}\n      </div>\n      \n      <div className=\"tab-navigation\">\n        <Link to=\"/dashboard\" className=\"tab active\">\n          <div className=\"icon\">📊</div>\n          <span>Milk Log</span>\n        </Link>\n        <Link to=\"/herds\" className=\"tab\">\n          <div className=\"icon\">🐄</div>\n          <span>My Ranch</span>\n        </Link>\n        <Link to=\"/profile\" className=\"tab\">\n          <div className=\"icon\">👤</div>\n          <span>Profile</span>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardNew;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}