{"ast":null,"code":"var _jsxFileName = \"/Users/juan/Documents/Inversiones/AI training/templates-main/Cursor MCP/dairy-milk-tracker/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const [stats, setStats] = useState({\n    totalLiters: 0,\n    averagePerDay: 0,\n    daysRecorded: 0\n  });\n  const [herds, setHerds] = useState([]);\n  const [milkProductions, setMilkProductions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setLoading(true);\n\n        // Fetch stats\n        const statsResponse = await axios.get('/api/milk-production/stats');\n        setStats({\n          totalLiters: statsResponse.data.total_liters,\n          averagePerDay: statsResponse.data.average_per_day,\n          daysRecorded: statsResponse.data.days_recorded\n        });\n\n        // Fetch herds\n        const herdsResponse = await axios.get('/api/herds/');\n        setHerds(herdsResponse.data);\n\n        // Fetch milk production data\n        const milkResponse = await axios.get('/api/milk-production/');\n        setMilkProductions(milkResponse.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching dashboard data', error);\n        setError('Failed to load dashboard data');\n        setLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, []);\n\n  // Prepare chart data\n  const prepareChartData = () => {\n    if (milkProductions.length === 0) return null;\n\n    // Sort by date\n    const sortedProductions = [...milkProductions].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n    // Extract dates and amounts\n    const labels = sortedProductions.map(item => new Date(item.date).toLocaleDateString());\n    const data = sortedProductions.map(item => item.amount_liters);\n    return {\n      labels,\n      datasets: [{\n        label: 'Milk Production (Liters)',\n        data,\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        tension: 0.1\n      }]\n    };\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Milk Production Over Time'\n      }\n    }\n  };\n  const chartData = prepareChartData();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading dashboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Milk Production\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [stats.totalLiters.toFixed(1), \" L\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Average Per Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [stats.averagePerDay.toFixed(1), \" L\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Days Recorded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.daysRecorded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Herds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: herds.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        options: chartOptions,\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Milk Production\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Herd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount (L)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fat %\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Protein %\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [milkProductions.slice(0, 5).map(record => {\n            const herd = herds.find(h => h.id === record.herd_id);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(record.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: herd ? herd.name : 'Unknown'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.amount_liters.toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.fat_percentage ? record.fat_percentage.toFixed(1) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.protein_percentage ? record.protein_percentage.toFixed(1) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)]\n            }, record.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this);\n          }), milkProductions.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              style: {\n                textAlign: 'center'\n              },\n              children: \"No milk production records yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '20px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/milk-production/add\",\n        className: \"btn-primary\",\n        style: {\n          display: 'inline-block',\n          marginRight: '10px'\n        },\n        children: \"Add Milk Production\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/herds/add\",\n        className: \"btn-secondary\",\n        style: {\n          display: 'inline-block'\n        },\n        children: \"Add New Herd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"EZU8mRbWhTyxKsf5vjcjgmVgQaM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","Dashboard","_s","stats","setStats","totalLiters","averagePerDay","daysRecorded","herds","setHerds","milkProductions","setMilkProductions","loading","setLoading","error","setError","fetchDashboardData","statsResponse","get","data","total_liters","average_per_day","days_recorded","herdsResponse","milkResponse","console","prepareChartData","length","sortedProductions","sort","a","b","Date","date","labels","map","item","toLocaleDateString","amount_liters","datasets","label","borderColor","backgroundColor","tension","chartOptions","responsive","plugins","legend","position","title","display","text","chartData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","options","slice","record","herd","find","h","id","herd_id","name","fat_percentage","protein_percentage","colSpan","style","textAlign","margin","to","marginRight","_c","$RefreshReg$"],"sources":["/Users/juan/Documents/Inversiones/AI training/templates-main/Cursor MCP/dairy-milk-tracker/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\n// Register ChartJS components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst Dashboard = () => {\n  const [stats, setStats] = useState({\n    totalLiters: 0,\n    averagePerDay: 0,\n    daysRecorded: 0\n  });\n  const [herds, setHerds] = useState([]);\n  const [milkProductions, setMilkProductions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setLoading(true);\n        \n        // Fetch stats\n        const statsResponse = await axios.get('/api/milk-production/stats');\n        setStats({\n          totalLiters: statsResponse.data.total_liters,\n          averagePerDay: statsResponse.data.average_per_day,\n          daysRecorded: statsResponse.data.days_recorded\n        });\n        \n        // Fetch herds\n        const herdsResponse = await axios.get('/api/herds/');\n        setHerds(herdsResponse.data);\n        \n        // Fetch milk production data\n        const milkResponse = await axios.get('/api/milk-production/');\n        setMilkProductions(milkResponse.data);\n        \n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching dashboard data', error);\n        setError('Failed to load dashboard data');\n        setLoading(false);\n      }\n    };\n    \n    fetchDashboardData();\n  }, []);\n\n  // Prepare chart data\n  const prepareChartData = () => {\n    if (milkProductions.length === 0) return null;\n    \n    // Sort by date\n    const sortedProductions = [...milkProductions].sort((a, b) => \n      new Date(a.date) - new Date(b.date)\n    );\n    \n    // Extract dates and amounts\n    const labels = sortedProductions.map(item => \n      new Date(item.date).toLocaleDateString()\n    );\n    \n    const data = sortedProductions.map(item => item.amount_liters);\n    \n    return {\n      labels,\n      datasets: [\n        {\n          label: 'Milk Production (Liters)',\n          data,\n          borderColor: 'rgb(75, 192, 192)',\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\n          tension: 0.1\n        }\n      ]\n    };\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Milk Production Over Time',\n      },\n    },\n  };\n\n  const chartData = prepareChartData();\n\n  if (loading) {\n    return (\n      <div className=\"container\">\n        <h2>Loading dashboard...</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Dashboard</h2>\n      \n      {error && <div className=\"alert alert-error\">{error}</div>}\n      \n      <div className=\"dashboard\">\n        <div className=\"stat-card\">\n          <h3>Total Milk Production</h3>\n          <div className=\"stat-value\">{stats.totalLiters.toFixed(1)} L</div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <h3>Average Per Day</h3>\n          <div className=\"stat-value\">{stats.averagePerDay.toFixed(1)} L</div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <h3>Days Recorded</h3>\n          <div className=\"stat-value\">{stats.daysRecorded}</div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <h3>Total Herds</h3>\n          <div className=\"stat-value\">{herds.length}</div>\n        </div>\n      </div>\n      \n      {chartData && (\n        <div className=\"chart-container\">\n          <Line options={chartOptions} data={chartData} />\n        </div>\n      )}\n      \n      <h3>Recent Milk Production</h3>\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Herd</th>\n              <th>Amount (L)</th>\n              <th>Fat %</th>\n              <th>Protein %</th>\n            </tr>\n          </thead>\n          <tbody>\n            {milkProductions.slice(0, 5).map(record => {\n              const herd = herds.find(h => h.id === record.herd_id);\n              return (\n                <tr key={record.id}>\n                  <td>{new Date(record.date).toLocaleDateString()}</td>\n                  <td>{herd ? herd.name : 'Unknown'}</td>\n                  <td>{record.amount_liters.toFixed(1)}</td>\n                  <td>{record.fat_percentage ? record.fat_percentage.toFixed(1) : 'N/A'}</td>\n                  <td>{record.protein_percentage ? record.protein_percentage.toFixed(1) : 'N/A'}</td>\n                </tr>\n              );\n            })}\n            {milkProductions.length === 0 && (\n              <tr>\n                <td colSpan=\"5\" style={{ textAlign: 'center' }}>No milk production records yet.</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      \n      <div style={{ textAlign: 'center', margin: '20px 0' }}>\n        <Link to=\"/milk-production/add\" className=\"btn-primary\" style={{ display: 'inline-block', marginRight: '10px' }}>\n          Add Milk Production\n        </Link>\n        <Link to=\"/herds/add\" className=\"btn-secondary\" style={{ display: 'inline-block' }}>\n          Add New Herd\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}